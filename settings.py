from pydantic_settings import BaseSettings, SettingsConfigDict


LEVELS = {
    1: "–ù–æ–≤–∏—á–æ–∫",
    2: "üèê –ù–æ–≤–∏—á–æ–∫+",
    3: "ü•â –õ–∞–π—Ç",
    4: "ü•à –õ–∞–π—Ç +",
    5: "ü•á –õ–∞–π—Ç ++",
    6: "üèÖ –ú–µ–¥–∏—É–º",
    7: "üèÜ –•–∞—Ä–¥",
}


class Database(BaseSettings):
    postgres_user: str
    postgres_password: str
    postgres_db: str
    postgres_host: str
    postgres_port: str

    @property
    def DATABASE_URL(self):
        return f"postgresql+asyncpg://{self.postgres_user}:{self.postgres_password}@{self.postgres_host}:{self.postgres_port}/{self.postgres_db}"

    model_config = SettingsConfigDict(env_file=".env", extra="ignore")


class Settings(BaseSettings):
    bot_token: str
    admins: list
    main_admin_url: str
    main_admin_tg_id: str
    levels: dict = LEVELS
    expire_event_days: int = 14
    admin_phone: str
    support_contact: str
    address: str = "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ò–Ω—Å—Ç–∏—Ç—É—Ç—Å–∫–∏–π –ø–µ—Ä., 5–ù"
    db: Database = Database()

    model_config = SettingsConfigDict(env_file=".env", extra="ignore")


settings = Settings()

