from typing import Any, List

from aiogram import Router, types, F, Bot
from aiogram.filters import or_f
from aiogram.fsm.context import FSMContext

from database.schemas import TeamUsers, User, Tournament, TournamentPayment
from routers.middlewares import CheckPrivateMessageMiddleware, DatabaseMiddleware
from routers import keyboards as kb, messages as ms
from routers.fsm_states import RegNewTeamFSM
from database.orm import AsyncOrm
from routers import utils
from routers.utils import calculate_team_points, convert_date_named_month
from settings import settings

router = Router()
router.message.middleware.register(CheckPrivateMessageMiddleware())
router.callback_query.middleware.register(CheckPrivateMessageMiddleware())
router.message.middleware.register(DatabaseMiddleware())
router.callback_query.middleware.register(DatabaseMiddleware())


# REG LIBERO IN TEAM
@router.callback_query(F.data.split("_")[0] == "reg-libero-in-team")
async def reg_libero_in_team(callback: types.CallbackQuery, session: Any, bot: Bot) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ª–∏–±–µ—Ä–æ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É"""
    team_id = int(callback.data.split("_")[1])
    tournament_id = int(callback.data.split("_")[2])
    tg_id = str(callback.from_user.id)

    tournament: Tournament = await AsyncOrm.get_tournament_by_id(tournament_id, session)
    team: TeamUsers = await AsyncOrm.get_team(team_id, session)
    team_leader: User = await AsyncOrm.get_user_by_id(team.team_leader_id)
    user: User = await AsyncOrm.get_user_by_tg_id(tg_id)

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ª–∏–±–µ—Ä–æ –≤ –∫–æ–º–∞–Ω–¥–µ
    already_have_libero: bool = True if team.team_libero_id else False

    # –µ—Å–ª–∏ –µ—Å—Ç—å –ª–∏–±–µ—Ä–æ, –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
    if already_have_libero:
        team_libero: User = await AsyncOrm.get_user_by_id(team.team_libero_id)

        # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –±—É–¥–µ—Ç –ª–∏ –ø–µ—Ä–µ–±–æ—Ä–∞ —Å –æ—á–∫–∞–º–∏ –ø—Ä–∏ –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –ª–∏–±–µ—Ä–æ
        future_users = team.users + [team_libero]
        over_points = True if utils.calculate_team_points(future_users) > tournament.level else False

        msg_for_leader = ms.message_for_team_leader_about_libero(user, team, tournament, already_have_libero,
                                                                     over_points, team_libero)

    else:
        over_points = False
        msg_for_leader = ms.message_for_team_leader_about_libero(user, team, tournament, already_have_libero, over_points)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–Ω—É –∫–æ–º–∞–Ω–¥—ã
    keyboard = kb.yes_no_accept_user_in_team_keyboard(team_id, user.id, tournament_id, for_libero=True)
    await bot.send_message(team_leader.tg_id, msg_for_leader, reply_markup=keyboard.as_markup())

    keyboard = kb.back_to_tournament(tournament_id)
    await callback.message.edit_text("üîî <b>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</b>\n\n"
                                     "–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ <b>–ª–∏–±–µ—Ä–æ</b> –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–∞–ø–∏—Ç–∞–Ω—É, "
                                     "–¥–æ–∂–¥–∏—Ç–µ—Å—å –µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
                                     reply_markup=keyboard.as_markup())


# ACCEPT LIBERO IN TEAM FOR TEAM LEADER
@router.callback_query(or_f(F.data.split("_")[0] == "accept-libero-in-team",
                            F.data.split("_")[0] == "refuse-libero-in-team"))
async def accept_refuse_user_in_team(callback: types.CallbackQuery, session: Any, bot: Bot) -> None:
    """–ü—Ä–∏–µ–º –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ª–∏–±–µ—Ä–æ –≤ –∫–æ–º–∞–Ω–¥—É"""
    team_id = int(callback.data.split("_")[1])
    user_id = int(callback.data.split("_")[2])
    tournament_id = int(callback.data.split("_")[3])

    user: User = await AsyncOrm.get_user_by_id(user_id)
    team: TeamUsers = await AsyncOrm.get_team(team_id, session)

    tournament: Tournament = await AsyncOrm.get_tournament_by_id(tournament_id, session)
    tournament_teams: list[TeamUsers] = await AsyncOrm.get_teams_with_users(tournament_id, session)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–∫—É—é –Ω–∏–±—É–¥—å –∏–∑ –∫–æ–º–∞–Ω–¥
    user_already_has_another_team: bool = False
    for reg_team in tournament_teams:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–º–∞–Ω–¥—É
        if reg_team.team_id == team.team_id:
            continue
        if user.id in [reg_user.id for reg_user in reg_team.users]:
            user_already_has_another_team = True

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ª–∏–±–µ—Ä–æ –≤ –∫–æ–º–∞–Ω–¥–µ
    already_have_libero: bool = True if team.team_libero_id else False

    # –ø—Ä–∏–µ–º –≤ –∫–æ–º–∞–Ω–¥—É
    if callback.data.split("_")[0] == "accept-user-in-team":
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ
        if len(team.users) + 1 > tournament.max_team_players:
            msg_for_captain = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–º–∞–Ω–¥—É \"{team.title}\", —Ç–∞–∫ –∫–∞–∫ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞"
            msg_for_user = f" ‚ùå –ö–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –∫–æ–º–∞–Ω–¥—É, —Ç–∞–∫ –∫–∞–∫ –∫–æ–º–∞–Ω–¥–∞ \"{team.title}\" —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞"

        # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥–µ
        elif user_already_has_another_team:
            msg_for_captain = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–º–∞–Ω–¥—É \"{team.title}\", —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥–µ –Ω–∞ —ç—Ç–æ–º —Ç—É—Ä–Ω–∏—Ä–µ"
            msg_for_user = f" ‚ùå –ö–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –∫–æ–º–∞–Ω–¥—É \"{team.title}\", —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥–µ –Ω–∞ —ç—Ç–æ–º —Ç—É—Ä–Ω–∏—Ä–µ"

        # –ï—Å–ª–∏ –ª–∏–±–µ—Ä–æ –µ—â–µ –Ω–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∫–æ–º–∞–Ω–¥—É
        elif already_have_libero:
            try:
                await AsyncOrm.add_user_in_team(team_id, user_id, session)
                await AsyncOrm.update_team_libero(team_id, user_id, session)

                msg_for_captain = f" ‚úÖ <a href='tg://user?id={user.tg_id}'>{user.firstname} {user.lastname}</a> " \
                                  f"({settings.levels[user.level]}) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–º–∞–Ω–¥—É <b>{team.title}</b> –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ª–∏–±–µ—Ä–æ"
                msg_for_user = f"‚úÖ –ö–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –∫–æ–º–∞–Ω–¥—É \"{team.title}\" –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ª–∏–±–µ—Ä–æ"

            # –ø—Ä–∏ –æ—à–∏–±–∫–µ (–ø–æ–ª—å-–ª—å —É–∂–µ –≤ –∫–æ–º–∞–Ω–¥–µ, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ª—é–¥–µ–π, –∫–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∞ –∏ —Ç–¥.)
            except Exception as e:
                msg_for_captain = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–º–∞–Ω–¥—É.\n" \
                                  "–í–æ–∑–º–æ–∂–Ω–æ –≤ –∫–æ–º–∞–Ω–¥–µ —É–∂–µ –Ω–µ—Ç –º–µ—Å—Ç, –∫–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∞ —Å —Ç—É—Ä–Ω–∏—Ä–∞ –∏–ª–∏ –∏–≥—Ä–æ–∫ —É–∂–µ –≤ –∫–æ–º–∞–Ω–¥–µ"
                msg_for_user = f" ‚ùå –ö–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –∫–æ–º–∞–Ω–¥—É \"{team.title}\""

        # –ï—Å–ª–∏ –ª–∏–±–µ—Ä–æ —É–∂–µ –µ—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∫–æ–º–∞–Ω–¥—É
        else:
            old_libero: User = await AsyncOrm.get_user_by_id(team.team_libero_id)
            over_points = True if utils.calculate_team_points(team.users + [old_libero]) > tournament.level else False

            # –µ—Å–ª–∏ –≤ –∫–æ–º–∞–Ω–¥–µ –ø–µ—Ä–µ–±–æ—Ä –ø–æ –æ—á–∫–∞–º
            if over_points:
                await AsyncOrm.delete_user_from_team(team_id, old_libero.id, session)
                await AsyncOrm.add_user_in_team(team_id, user_id, session)
                await AsyncOrm.update_team_libero(team_id, user_id, session)

                msg_for_captain = f" ‚úÖ <a href='tg://user?id={user.tg_id}'>{user.firstname} {user.lastname}</a> " \
                                  f"({settings.levels[user.level]}) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–º–∞–Ω–¥—É <b>{team.title}</b> –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ª–∏–±–µ—Ä–æ\n" \
                                  f"‚ùó–ò–≥—Ä–æ–∫ <a href='tg://user?id={old_libero.tg_id}'>{old_libero.firstname} {old_libero.lastname}</a> ({settings.levels[old_libero.level]}) " \
                                  f"–∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∫–æ–º–∞–Ω–¥—ã, —Ç–∞–∫ –∫–∞–∫ —Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –ø—Ä–µ–≤—ã—Å–∏–ª–æ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –¥–ª—è —ç—Ç–æ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞"
                msg_for_user = f"‚úÖ –ö–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –∫–æ–º–∞–Ω–¥—É \"{team.title}\" –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ª–∏–±–µ—Ä–æ"

                # –æ–ø–æ–≤–µ—â–∞–µ–º —Å—Ç–∞—Ä–æ–≥–æ –ª–∏–±–µ—Ä–æ
                msg_for_old_libero = f"üîî <b>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</b>\n\n" \
                                     f"–ö–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã \"{team.title}\" —É–¥–∞–ª–∏–ª –≤–∞—Å –∏–∑ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ç—É—Ä–Ω–∏—Ä–µ \"{tournament.type}\" {tournament.title}"
                await bot.send_message(old_libero.tg_id, msg_for_old_libero)

            # –∫–æ–≥–¥–∞ –Ω–µ—Ç –ø–µ—Ä–µ–±–æ—Ä–∞ –ø–æ –æ—á–∫–∞–º
            else:
                try:
                    await AsyncOrm.add_user_in_team(team_id, user_id, session)
                    await AsyncOrm.update_team_libero(team_id, user_id, session)

                    msg_for_captain = f" ‚úÖ <a href='tg://user?id={user.tg_id}'>{user.firstname} {user.lastname}</a> " \
                                      f"({settings.levels[user.level]}) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–º–∞–Ω–¥—É <b>{team.title}</b> –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ª–∏–±–µ—Ä–æ"
                    msg_for_user = f"‚úÖ –ö–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –∫–æ–º–∞–Ω–¥—É \"{team.title}\" –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ª–∏–±–µ—Ä–æ"

                # –ø—Ä–∏ –æ—à–∏–±–∫–µ (–ø–æ–ª—å-–ª—å —É–∂–µ –≤ –∫–æ–º–∞–Ω–¥–µ, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ª—é–¥–µ–π, –∫–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∞ –∏ —Ç–¥.)
                except Exception as e:
                    msg_for_captain = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–º–∞–Ω–¥—É.\n" \
                                      "–í–æ–∑–º–æ–∂–Ω–æ –≤ –∫–æ–º–∞–Ω–¥–µ —É–∂–µ –Ω–µ—Ç –º–µ—Å—Ç, –∫–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∞ —Å —Ç—É—Ä–Ω–∏—Ä–∞ –∏–ª–∏ –∏–≥—Ä–æ–∫ —É–∂–µ –≤ –∫–æ–º–∞–Ω–¥–µ"
                    msg_for_user = f" ‚ùå –ö–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –∫–æ–º–∞–Ω–¥—É \"{team.title}\""

    # –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
    else:
        msg_for_captain = f" ‚ùå –ó–∞–ø—Ä–æ—Å <a href='tg://user?id={user.tg_id}'>{user.firstname} {user.lastname}</a> " \
                          f"({settings.levels[user.level]}) –≤ –∫–æ–º–∞–Ω–¥—É \"{team.title}\" <b>–æ—Ç–∫–ª–æ–Ω–µ–Ω</b>"
        msg_for_user = f" ‚ùå –ö–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –∫–æ–º–∞–Ω–¥—É \"{team.title}\""

    # –æ—Ç–≤–µ—á–∞–µ–º –∫–∞–ø–∏—Ç–∞–Ω—É
    await callback.message.edit_text(msg_for_captain)
    # –æ–ø–æ–≤–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keyboard = kb.back_to_tournament(tournament_id)
    await bot.send_message(user.tg_id, msg_for_user, reply_markup=keyboard.as_markup())
