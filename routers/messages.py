from database.schemas import User, EventRel
from routers.utils import convert_date, convert_time
from settings import settings

def user_profile_message(user: User) -> str:
    """–°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_lvl = "üîù –£—Ä–æ–≤–µ–Ω—å:" + user.level if user.level else "üîù –£—Ä–æ–≤–µ–Ω—å: —É—Ä–æ–≤–µ–Ω—å –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
    message = f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n\nüë§ {user.firstname} {user.lastname}\n{user_lvl}"

    return message


def event_card_message(event: EventRel, user_registered: bool) -> str:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—ã—Ç–∏–∏ —Å –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    date = convert_date(event.date)
    user_registered_count = len(event.users_registered)

    message = f"<b>üìÖ {date}</b>\n\n" \
              f"<b>\"{event.title}\"</b>\n" \
              f"{event.type}\n" \
              f"üë•–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {user_registered_count}/{event.places} (<b>—Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç {event.places - user_registered_count}</b>)\n\n"
    if user_registered:
        message += "‚úÖ –í—ã <b>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã</b> –Ω–∞ —ç—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"
    else:
        message += "‚ùå –í—ã –µ—â–µ <b>–Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã</b> –Ω–∞ —ç—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"
    return message


def event_card_for_admin_message(event: EventRel) -> str:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—ã—Ç–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    date = convert_date(event.date)
    user_registered_count = len(event.users_registered)
    message = f"<b>üìÖ {date}</b>\n\n" \
              f"<b>\"{event.title}\"</b>\n" \
              f"{event.type}\n" \
              f"üë•–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {user_registered_count}/{event.places} (<b>—Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç {event.places - user_registered_count}</b>)\n\n"

    if event.users_registered:
        message += "–£—á–∞—Å—Ç–Ω–∏–∫–∏:\n"
        for idx, user in enumerate(event.users_registered, 1):
            message += f"<b>{idx}.</b> <a href='tg://user?id={user.tg_id}'>{user.firstname} {user.lastname}</a> <b>{'—É—Ä–æ–≤–µ–Ω—å ' + user.level if user.level else ''}</b>\n"

        message += "\n–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –¥–∏–∞–ª–æ–≥ —Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –µ–≥–æ –∏–º—è\n" \
                   "–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞"
    # –µ—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ—Ç
    else:
        message += "<b>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</b>"

    return message


def notify_message(event: EventRel) -> str:
    """–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Å–æ–±—ã—Ç–∏–∏"""
    event_date = convert_date(event.date)
    event_time = convert_time(event.date)
    message = f"üîî <i>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</i>\n\n" \
              f"–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –≤—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ <b>\"{event.title}\"</b>, " \
              f"–∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–π–¥–µ—Ç <b>{event_date}</b> –≤ <b>{event_time}</b>\n\n" \
              f"–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è –ø—Ä–∏–π—Ç–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{settings.main_admin}"

    return message


